# Description:
#  test rct sequence: txt -> digi -> txt
#  starting with data asci files verify identity with output

process RCTtxt2txt  = {
    
    untracked PSet maxEvents = { untracked int32 input = 10 }

    source = EmptySource {}   

    service = MessageLogger {
	untracked PSet detailedInfo.txt = { 
	    untracked string threshold = "DEBUG" } 
	untracked vstring debugModules 	
	= { "rctDigiToRctText", "rctTextToRctDigi" }
    }
    
    # txt->digi
    include "L1Trigger/TextToDigi/data/RctTextToRctDigi.cfi"
    replace rctTextToRctDigi.TextFileName = "data_mc/testMC_"

    # digi->txt
    include "L1Trigger/TextToDigi/data/RctDigiToRctText.cfi"
    replace rctDigiToRctText.RctInputLabel = rctTextToRctDigi
    replace rctDigiToRctText.TextFileName  = "data_out/testMC_"

    # dump digis
    include "L1Trigger/HardwareValidation/data/L1Comparator.cfi"
    replace l1Compare.RCT_dataLabel = rctTextToRctDigi
    replace l1Compare.RCT_emulLabel = rctTextToRctDigi
    replace l1Compare.DumpFile      = "dump_rct_t2t.txt"
    replace l1Compare.DumpMode      = 1
    replace l1Compare.COMPARE_COLLS = { 0,0,1,0,0,0,0,0,0,0,0 }

    path p ={rctTextToRctDigi, rctDigiToRctText, l1Compare}

    module outputEvents = PoolOutputModule {
	untracked string fileName = "testRctText2Text.root"
    }
    
    endpath outpath = {outputEvents}
}
