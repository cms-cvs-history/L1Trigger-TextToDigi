# Description:
#  test gt psb sequence: txt -> digi -> txt -> digi
#  verify text and digi consistency

process PSBtxt2txt  = {
    
    untracked PSet maxEvents = { untracked int32 input = 3564 }
    
    source = EmptySource {}   

    //include "FWCore/MessageLogger/data/MessageLogger.cfi"
    service = MessageLogger {
    	untracked PSet detailedInfo.txt = { 
    	    untracked string threshold = "DEBUG" } 
    	untracked vstring debugModules 	
	= {"psbTextToDigi", "gctDigiToPsbText", "l1Compare"}
    }

    # txt->digi
    #include "L1Trigger/TextToDigi/data/GtPsbTextToDigi.cfi"
    module gtPsbTextToDigi = GtPsbTextToDigi {
    	string TextFileName = "psb-"
    	untracked int32 FileEventOffset = 0
    }

    # digi->txt
    #include "L1Trigger/TextToDigi/data/GctDigiToPsbText.cfi"
    module gctDigiToPsbText = GctDigiToPsbText {
    	InputTag GctInputLabel = gtPsbTextToDigi
    	string TextFileName = "psb-out-"
    	untracked bool HexUpperCase = false
    }
    
    # txt->digi
    module gtPsbTextToDigiB = GtPsbTextToDigi {
	string TextFileName = "psb-out-"
	untracked int32 FileEventOffset = 0
    }
    
    # dump digis
    include "L1Trigger/HardwareValidation/data/L1Comparator.cfi"
    replace l1Compare.GCT_dataLabel = gtPsbTextToDigiB
    replace l1Compare.GCT_emulLabel = gtPsbTextToDigi
    replace l1Compare.DumpFile      = "dump.txt"
    replace l1Compare.DumpMode      = 1
    replace l1Compare.COMPARE_COLLS = { 0,0,0,1,0,0,0,0,0,0,0,0 }
    
    path p = {
	gtPsbTextToDigi
	, gctDigiToPsbText 
	, gtPsbTextToDigiB
	, l1Compare
    }
    
    module outputEvents = PoolOutputModule {
    	untracked string fileName = "PsbLoop.root"
    }
    endpath outpath = {outputEvents}
}
